name: Docker compose CI and push

on:
  push:
    branches: [ "dev", "master","test"  ]
  pull_request:
    branches: [ "dev", "master","test" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.run_id }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setting Environment
        env:
          PROJECT_NAME: ${{ vars.PROJECT_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_CONNECTION: ${{ vars.DB_CONNECTION }}
          APP_KEY: ${{ secrets.APP_KEY }}

        run: |
          cp .env.example .env

          sed -i "s/^DB_HOST=.*/DB_HOST=${DB_HOST}/" .env
          sed -i "s/^DB_CONNECTION=.*/DB_CONNECTION=${DB_CONNECTION}/" .env
          sed -i "s/^DB_DATABASE=.*/DB_DATABASE=${DB_DATABASE}/" .env
          sed -i "s/^DB_USERNAME=.*/DB_USERNAME=${DB_USERNAME}/" .env
          sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=${DB_PASSWORD}/" .env
          sed -i "s/^REDIS_PASSWORD=.*/REDIS_PASSWORD=${REDIS_PASSWORD}/" .env
          sed -i "s/^APP_KEY=.*/APP_KEY=${APP_KEY}/" .env

          echo "Updated .env:"
          cat .env

      - name: Copy .env to backend
        working-directory: ${{ github.workspace }}
        run: |
          cp .env ./backend/

 
          - name: Build and Push Docker Images
          run: |
            docker build -t ghcr.io/${{ github.repository }}/php:latest -f .docker/php/php.Dockerfile .
            docker build -t ghcr.io/${{ github.repository }}/node:latest -f .docker/node/node.Dockerfile .
            docker build -t ghcr.io/${{ github.repository }}/nginx:latest -f .docker/nginx/nginx.Dockerfile .
            docker push ghcr.io/${{ github.repository }}/php:latest
            docker push ghcr.io/${{ github.repository }}/node:latest
            docker push ghcr.io/${{ github.repository }}/nginx:latest
